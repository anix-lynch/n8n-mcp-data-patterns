{\n  \"name\": \"üßπ Data Quality & Bias Audit Pipeline\",\n  \"nodes\": [\n    {\n      \"parameters\": {\n        \"path\": \"/data/input\",\n        \"watchFolder\": true,\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        },\n        \"options\": {\n          \"allowedFileExtensions\": \"csv\"\n        }\n      },\n      \"id\": \"file-trigger\",\n      \"name\": \"üìÅ Watch for CSV Files\",\n      \"type\": \"n8n-nodes-base.localFileTrigger\",\n      \"position\": [140, 240],\n      \"typeVersion\": 1\n    },\n    {\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"// Read and preview the CSV file\\nconst fs = require('fs');\\nconst path = require('path');\\n\\n// Get file info\\nconst filePath = $input.first().json.path;\\nconst fileName = path.basename(filePath);\\n\\n// Read first few lines for preview\\nconst fileContent = fs.readFileSync(filePath, 'utf8');\\nconst lines = fileContent.split('\\\\n');\\nconst headers = lines[0];\\nconst sampleRows = lines.slice(1, 6).join('\\\\n'); // First 5 data rows\\n\\n// Prepare data for Claude\\nconst dataPreview = {\\n  filename: fileName,\\n  headers: headers,\\n  sample_data: sampleRows,\\n  total_lines: lines.length - 1,\\n  file_path: filePath\\n};\\n\\nreturn { json: dataPreview };\"\n      },\n      \"id\": \"file-reader\",\n      \"name\": \"üìñ Read File Preview\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [300, 240],\n      \"typeVersion\": 2\n    },\n    {\n      \"parameters\": {\n        \"model\": \"claude-3-sonnet-20240229\",\n        \"prompt\": \"You are a senior data scientist conducting a comprehensive audit of this dataset.\\n\\n**Dataset Info:**\\n- Filename: {{$json.filename}}\\n- Headers: {{$json.headers}}\\n- Sample Data: {{$json.sample_data}}\\n- Total Rows: {{$json.total_lines}}\\n\\n**Please analyze and provide recommendations in clear, actionable language:**\\n\\n1. **Data Quality Assessment**\\n2. **Potential Bias Issues**\\n3. **Immediate Action Items**\\n4. **Recommendations by Priority**\\n\\nBe specific and practical in your recommendations.\",\n        \"options\": {}\n      },\n      \"id\": \"claude-audit\",\n      \"name\": \"ü§ñ Claude Data Audit\",\n      \"type\": \"@n8n/n8n-nodes-mcp.claude\",\n      \"position\": [460, 240],\n      \"typeVersion\": 1\n    },\n    {\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"// Statistical analysis of the full dataset\\nconst fs = require('fs');\\nconst filePath = $input.first().json.file_path;\\n\\n// Read and parse CSV\\nconst fileContent = fs.readFileSync(filePath, 'utf8');\\nconst lines = fileContent.split('\\\\n').filter(line => line.trim() !== '');\\nconst headers = lines[0].split(',').map(h => h.trim());\\nconst dataRows = lines.slice(1);\\n\\n// Basic statistical analysis\\nconst stats = {\\n  total_rows: dataRows.length,\\n  total_columns: headers.length,\\n  missing_data_analysis: {},\\n  basic_statistics: {}\\n};\\n\\n// Analyze each column\\nheaders.forEach((header, index) => {\\n  const columnData = dataRows.map(row => {\\n    const cells = row.split(',');\\n    return cells[index] ? cells[index].trim() : '';\\n  });\\n  \\n  // Count missing values\\n  const missingCount = columnData.filter(cell => \\n    cell === '' || cell.toLowerCase() === 'null' || cell.toLowerCase() === 'n/a' || cell === 'undefined'\\n  ).length;\\n  \\n  stats.missing_data_analysis[header] = {\\n    missing_count: missingCount,\\n    missing_percentage: ((missingCount / dataRows.length) * 100).toFixed(2)\\n  };\\n  \\n  // Basic stats for numeric columns\\n  const numericValues = columnData\\n    .filter(cell => cell !== '' && !isNaN(parseFloat(cell)))\\n    .map(cell => parseFloat(cell));\\n  \\n  if (numericValues.length > 0) {\\n    const sorted = numericValues.sort((a, b) => a - b);\\n    const mean = numericValues.reduce((sum, val) => sum + val, 0) / numericValues.length;\\n    \\n    stats.basic_statistics[header] = {\\n      count: numericValues.length,\\n      mean: mean.toFixed(2),\\n      min: sorted[0],\\n      max: sorted[sorted.length - 1],\\n      potential_outliers: numericValues.filter(val => \\n        Math.abs(val - mean) > 3 * Math.sqrt(numericValues.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / numericValues.length)\\n      ).length\\n    };\\n  }\\n});\\n\\n// Calculate overall quality score\\nconst avgMissingPct = Object.values(stats.missing_data_analysis)\\n  .reduce((sum, col) => sum + parseFloat(col.missing_percentage), 0) / headers.length;\\n\\nconst qualityScore = Math.max(0, 100 - (avgMissingPct * 2));\\n\\nstats.overall_quality_score = qualityScore.toFixed(1);\\nstats.timestamp = new Date().toISOString();\\n\\nreturn { json: stats };\"\n      },\n      \"id\": \"statistical-analysis\",\n      \"name\": \"üìä Statistical Analysis\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [620, 240],\n      \"typeVersion\": 2\n    },\n    {\n      \"parameters\": {\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\",\n        \"nodeCredentialType\": \"httpBasicAuth\",\n        \"requestMethod\": \"POST\",\n        \"url\": \"={{ $json.webhook_url || 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK' }}\",\n        \"options\": {},\n        \"bodyContentType\": \"json\",\n        \"jsonBody\": \"={\\n  \\\"text\\\": \\\"üîç Data Quality Audit Complete!\\\",\\n  \\\"attachments\\\": [\\n    {\\n      \\\"color\\\": \\\"{{ $node['statistical-analysis'].json.overall_quality_score >= 75 ? 'good' : ($node['statistical-analysis'].json.overall_quality_score >= 50 ? 'warning' : 'danger') }}\\\",\\n      \\\"fields\\\": [\\n        {\\n          \\\"title\\\": \\\"Quality Score\\\",\\n          \\\"value\\\": \\\"{{ $node['statistical-analysis'].json.overall_quality_score }}/100\\\",\\n          \\\"short\\\": true\\n        },\\n        {\\n          \\\"title\\\": \\\"Dataset\\\",\\n          \\\"value\\\": \\\"{{ $node['file-reader'].json.filename }}\\\",\\n          \\\"short\\\": true\\n        },\\n        {\\n          \\\"title\\\": \\\"Rows √ó Columns\\\",\\n          \\\"value\\\": \\\"{{ $node['statistical-analysis'].json.total_rows }} √ó {{ $node['statistical-analysis'].json.total_columns }}\\\",\\n          \\\"short\\\": true\\n        }\\n      ]\\n    }\\n  ]\\n}\"\n      },\n      \"id\": \"slack-notification\",\n      \"name\": \"üí¨ Slack Alert\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [780, 160],\n      \"typeVersion\": 4.1\n    },\n    {\n      \"parameters\": {\n        \"fromEmail\": \"noreply@yourcompany.com\",\n        \"toEmail\": \"={{ $json.recipient_email || 'data-team@yourcompany.com' }}\",\n        \"subject\": \"üîç Data Quality Audit Report - {{ $node['file-reader'].json.filename }}\",\n        \"html\": \"<div style='font-family: Arial, sans-serif; max-width: 600px;'>\\n  <h2 style='color: #333;'>üîç Data Quality Audit Complete</h2>\\n  \\n  <div style='background: {{ $node['statistical-analysis'].json.overall_quality_score >= 75 ? '#d4edda' : ($node['statistical-analysis'].json.overall_quality_score >= 50 ? '#fff3cd' : '#f8d7da') }}; padding: 15px; border-radius: 5px; margin: 20px 0;'>\\n    <h3 style='margin: 0; color: {{ $node['statistical-analysis'].json.overall_quality_score >= 75 ? '#155724' : ($node['statistical-analysis'].json.overall_quality_score >= 50 ? '#856404' : '#721c24') }};'>\\n      Quality Score: {{ $node['statistical-analysis'].json.overall_quality_score }}/100\\n    </h3>\\n  </div>\\n  \\n  <h3>üìä Dataset Overview</h3>\\n  <ul>\\n    <li><strong>File:</strong> {{ $node['file-reader'].json.filename }}</li>\\n    <li><strong>Rows:</strong> {{ $node['statistical-analysis'].json.total_rows }}</li>\\n    <li><strong>Columns:</strong> {{ $node['statistical-analysis'].json.total_columns }}</li>\\n    <li><strong>Timestamp:</strong> {{ $node['statistical-analysis'].json.timestamp }}</li>\\n  </ul>\\n  \\n  <h3>ü§ñ Claude's Analysis</h3>\\n  <div style='background: #f8f9fa; padding: 15px; border-left: 4px solid #007cba; margin: 10px 0;'>\\n    {{ $node['claude-audit'].json.choices[0].message.content || $node['claude-audit'].json.content || 'Analysis completed - see detailed report.' }}\\n  </div>\\n  \\n  <h3>üìà Key Statistics</h3>\\n  <p>Missing data analysis and statistical summaries have been completed. Check the detailed report for actionable insights.</p>\\n  \\n  <div style='background: #e3f2fd; padding: 15px; border-radius: 5px; margin: 20px 0;'>\\n    <h4 style='margin: 0 0 10px 0;'>üéØ Next Steps:</h4>\\n    <ol>\\n      <li>Review missing data patterns</li>\\n      <li>Investigate potential outliers</li>\\n      <li>Implement recommended data cleaning</li>\\n      <li>Set up ongoing quality monitoring</li>\\n    </ol>\\n  </div>\\n</div>\",\n        \"options\": {}\n      },\n      \"id\": \"email-report\",\n      \"name\": \"üìß Email Report\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [780, 320],\n      \"typeVersion\": 2.1\n    }\n  ],\n  \"connections\": {\n    \"file-trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"file-reader\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"file-reader\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"claude-audit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"claude-audit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"statistical-analysis\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"statistical-analysis\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"slack-notification\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"email-report\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"staticData\": null,\n  \"tags\": [],\n  \"triggerCount\": 1,\n  \"updatedAt\": \"2024-06-21T01:00:00.000Z\",\n  \"versionId\": \"1\"\n}